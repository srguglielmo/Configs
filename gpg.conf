# Options for GnuPG

# Get rid of copyright notice on every run.
no-greeting

# When verifying a signature made from a subkey, ensure that the cross
# certification "back signature" on the subkey is present and valid.
# This protects against a subtle attack against subkeys that can sign.
require-cross-certification

# Everyone should be using UTF-8.
charset utf-8

# Some old Windows platforms require 8.3 filenames.  If your system
# can handle long filenames, uncomment this.
no-mangle-dos-filenames

# Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect
# to the agent before it asks for a passphrase.
use-agent

# Use this keyserver (can be overridden using --keyserver on the
# command line). hkps is encrypted (like https), but you'll need the
# CA file (See below).
keyserver hkps://hkps.pool.sks-keyservers.net

# If you want to use a proxy (Tor?) to contact the keyserver,
# specify it here.
#keyserver-options http-proxy=socks5-hostname://127.0.0.1:port

# The certificate authority of the hkps (encrypted) keyservers. You can
# get this from https://sks-keyservers.net/verify_tls.php
# It's needed to make sure you're not being MitM'ed.
keyserver-options ca-cert-file=~/.gnupg/sks-keyservers.netCA.pem

# Be verbose.
keyserver-options verbose

# Don't use keyservers that a remote key prefers. It could be
# malicious.
keyserver-options no-honor-keyserver-url

# When using a proxy (Tor? - See option above), don't leak DNS outside
# of the proxy.
keyserver-options no-try-dns-srv

# Don't include the GPG version string in ASCII key exports. Could be a
# security risk if someone knows you're running an old version.
no-emit-version

# Don't include the comment string in clear text sigs and ASCII
# messages. Comment strings are sort of useless anyway.
no-comments

# Never use the short keyid format. Collisions were detected
# in 2011.
# http://www.asheesh.org/note/debian/short-key-ids-are-bad-news.html
keyid-format 0xlong

# Even long keyid format isn't good enough, use full fingerprints.
with-fingerprint

# Display the calculated validity of user IDs during key listings
list-options show-uid-validity
verify-options show-uid-validity

# When multiple digests/ciphers are supported by recipients, choose the strongest.
personal-cipher-preferences AES256 AES192 AES
personal-digest-preferences SHA512 SHA384 SHA256

# Message digest algo used when signing a key
cert-digest-algo SHA512

# Used for new keys and becomes the default for --edit-key's 'setpref'
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
